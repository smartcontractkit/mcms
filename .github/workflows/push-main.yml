name: push-main

on:
  push:
    branches:
      - main

jobs:
  ci-lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Linting Go
        uses: smartcontractkit/.github/actions/ci-lint-go@7a4d99cb349ea8f25195d2390d157942031f8a57
        with:
          golangci-lint-version: v1.61.0
          # grafana inputs
          metrics-job-name: ci-lint
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

  ci-lint-misc:
    name: Lint GH Actions and scripts
    runs-on: ubuntu-latest
    steps:
      - name: Linting Misc (yaml + sh files)
        uses: smartcontractkit/.github/actions/ci-lint-misc@7a4d99cb349ea8f25195d2390d157942031f8a57

  ci-test:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: ci-test
        uses: smartcontractkit/.github/actions/ci-test-go@7a4d99cb349ea8f25195d2390d157942031f8a57 # ci-test-go@0.1.5
        with:
          go-test-cmd: go test -coverprofile=coverage.txt $(go list ./...)
          use-go-cache: true
          # grafana inputs
          metrics-job-name: ci-test
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

  cd-release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: cd-release
        uses: smartcontractkit/.github/actions/cicd-changesets@7a4d99cb349ea8f25195d2390d157942031f8a57 # cicd-changesets@0.3.4
        with:
          # general inputs
          git-user: app-token-issuer-infra-releng[bot]
          git-email: app-token-issuer-infra-releng[bot]@users.noreply.github.com
          # aws inputs
          aws-region: ${{ secrets.AWS_REGION }}
          aws-role-arn: ${{ secrets.AWS_OIDC_MCMS_CI_CHANGESET_TOKEN_ISSUER_ROLE_ARN }}
          aws-lambda-url: ${{ secrets.GATI_LAMBDA_DEPLOYMENT_AUTOMATION_URL }}
          # grafana inputs
          metrics-job-name: cd-release
          gc-basic-auth: ${{ secrets.GRAFANA_INTERNAL_BASIC_AUTH }}
          gc-host: ${{ secrets.GRAFANA_INTERNAL_HOST }}
          gc-org-id: ${{ secrets.GRAFANA_INTERNAL_TENANT_ID }}

  ci-sonarqube:
    name: Sonarqube Scan
    needs: [ ci-lint, ci-lint-misc, ci-test ]
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Scanning with Sonarqube
        uses: smartcontractkit/.github/actions/ci-sonarqube-go@5f4a9c9c3407dd499a1ebbc658a45b9beb9bf675
        with:
          # sonarqube inputs
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
          include-lint: true
